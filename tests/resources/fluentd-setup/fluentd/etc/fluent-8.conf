# echo '2024-02-11T08:15:40.012345Z stdout F {"level":"info","ts":"2025-02-14T18:48:47Z","msg":"Reconciling ScaledObject","controller":"scaledobject","controllerGroup":"keda.sh","controllerKind":"ScaledObject","ScaledObject":{"name":"identity-hangfire-worker-all-user-indexer-hpa","namespace":"development"},"namespace":"development","name":"identity-hangfire-worker-all-user-indexer-hpa","reconcileID":"6991231e-705c-4e78-863a-255457c2e3f8"}' | fluent-cat --none -p 24228 keda.testing
# echo '2024-02-11T08:15:40.012345Z stderr F {"level":"error","ts":"2025-02-14T18:48:47Z","logger":"scale_handler","msg":"error getting scale decision","scaledObject.Namespace":"development","scaledObject.Name":"hagia-sophia-consumer-import-vc-customer-hpa","scaler":"rabbitMQScaler","error":"error inspecting rabbitMQ: error requesting rabbitMQ API status: 404 Not Found, response: {\"error\":\"Object Not Found\",\"reason\":\"Not Found\"}, from: https://user:password@dramatic-purple-poodle.in.rmq3.cloudamqp.com/api/queues/develop/hagia-sophia.import-vc-customer-payment-method.created","stacktrace":"github.com/kedacore/keda/v2/pkg/scaling.(*scaleHandler).getScalerState\n\t/workspace/pkg/scaling/scale_handler.go:720\ngithub.com/kedacore/keda/v2/pkg/scaling.(*scaleHandler).getScaledObjectState\n\t/workspace/pkg/scaling/scale_handler.go:590\ngithub.com/kedacore/keda/v2/pkg/scaling.(*scaleHandler).checkScalers\n\t/workspace/pkg/scaling/scale_handler.go:241\ngithub.com/kedacore/keda/v2/pkg/scaling.(*scaleHandler).startScaleLoop\n\t/workspace/pkg/scaling/scale_handler.go:180"}' | fluent-cat --none -p 24228 keda.testing

<source>
  @type forward
  port 24228
  bind 0.0.0.0
</source>

<match fluentd.**>
  @type null
</match>

<filter keda.**>
  @type parser
  key_name message
  <parse>
    @type regexp
    expression /^(?<time>.+) stdout|stderr( (.))? (?<log>.*)$/
    time_format %Y-%m-%dT%H:%M:%S.%NZ
    types stream:string,logtag:string,log:string
  </parse>
</filter>


# <# Parse the inner JSON content of the log field
<filter keda.**>
  @type parser
  key_name log
  <parse>
    @type json
  </parse>
  reserve_data true
</filter>

<filter keda.**>
  @type grep
  <regexp>
    key level
    pattern /^error$/
  </regexp>
</filter>

# This was taylor made for the KEDA error logs. If you want info logs, a few adjustments must be made
<filter keda.**>
  @type record_transformer
  enable_ruby true
  <record>
    application {
      "levelname": "${record['level']}",
      "message": "${record['msg']}",
      "error": "${record['error']}",
      "name": "${record['scaledObject.Name']}",
      "scaler": "${record['scaler']}"
    }
  </record>
  remove_keys level, ts, logger, msg, stacktrace, error, scaledObject.Namespace, scaledObject.Name, scaler, ScaledObject
</filter>

<match keda.**>
  @type stdout
  <format>
    @type json
  </format>
</match>
